apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: kafka
    spec:
      hostname: kafka
      containers:
      - env:

        - name: KAFKA_CREATE_TOPICS
          value: knapsack-topic:3:1,Topic2:1:1:compact

        - name: KAFKA_BROKER_ID
          value: "1"

        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092

        - name: KAFKA_ADVERTISED_PORT
          value: "9092"

#        - name: KAFKA_ADVERTISED_LISTENERS
#          value: PLAINTEXT://kafka:9092

#        - name: KAFKA_ADVERTISED_LISTENERS
#          value: LISTENER_DOCKER_INTERNAL://kafka:19092, LISTENER_DOCKER_EXTERNAL://kafka:9092
#
#        - name: KAFKA_INTER_BROKER_LISTENER_NAME
#          value: LISTENER_DOCKER_INTERNAL
#
#        - name: KAFKA_LISTENERS
#          value: LISTENER_DOCKER_INTERNAL://:19092, LISTENER_DOCKER_EXTERNAL://:9092
#
#        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
#          value: LISTENER_DOCKER_INTERNAL:PLAINTEXT, LISTENER_DOCKER_EXTERNAL:PLAINTEXT

        - name: KAFKA_LOG4J_LOGGERS
          value: kafka.controller=INFO, kafka.producer.async.DefaultEventHandler=INFO,
            state.change.logger=INFO

        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"

        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181

        - name: KAFKA_PORT
          value: "9092"
        image: wurstmeister/kafka:2.12-2.2.1
        name: kafka
        ports:
        - containerPort: 9092
        resources: {}
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: kafka-claim0
      restartPolicy: Always
      volumes:
      - name: kafka-claim0
        persistentVolumeClaim:
          claimName: kafka-claim0
status: {}
